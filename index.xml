<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>Computer Science Knowledge Base</title>
      <link>https://quartz.jzhao.xyz</link>
      <description>Last 10 notes on Computer Science Knowledge Base</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>Abstraction (TODO)</title>
    <link>https:/quartz.jzhao.xyz/programming/Abstraction-(TODO)</link>
    <guid>https:/quartz.jzhao.xyz/programming/Abstraction-(TODO)</guid>
    <description>… Related talks § Preventing the Collapse of Civilization / Jonathan Blow (Thekla, Inc) (youtube.com) Abstraction Can Make Your Code Worse (youtube.com) Clean Code : Horrible Performance | Full Interview (youtube.</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>Advanced Data Structures (TODO)</title>
    <link>https:/quartz.jzhao.xyz/programming/Advanced-Data-Structures-(TODO)</link>
    <guid>https:/quartz.jzhao.xyz/programming/Advanced-Data-Structures-(TODO)</guid>
    <description>Sometimes the basics aren’t enough. Often times problems you encounter will require more in-depth algorithms, but sometimes the way you’re representing the data can be enough to handle your problems.</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>Algorithms &amp; Complexity (TODO)</title>
    <link>https:/quartz.jzhao.xyz/programming/Algorithms-&-Complexity-(TODO)</link>
    <guid>https:/quartz.jzhao.xyz/programming/Algorithms-&-Complexity-(TODO)</guid>
    <description>Simple patterns (TODO) § These patterns are ones you will often see people do even if they’ve never looked at algorithms before. String Building (TODO) § The idea of the string builder pattern is to treat a string like an list and continuously push substrings into the string in order to build the result slowly.</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>Number Systems (binary &amp; hex)</title>
    <link>https:/quartz.jzhao.xyz/programming/Binary-and-Hexadecimal-(TODO)</link>
    <guid>https:/quartz.jzhao.xyz/programming/Binary-and-Hexadecimal-(TODO)</guid>
    <description>When we count we traditionally use base 10. Base 10 gives us 10 values before we shift digits. We go from 0-9, and then we shift 1 digit left, and start from 0 in the far right column again: 0 1 2 .</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>Compilers (TODO)</title>
    <link>https:/quartz.jzhao.xyz/programming/Compilers-(TODO)</link>
    <guid>https:/quartz.jzhao.xyz/programming/Compilers-(TODO)</guid>
    <description>Steps: Lexer/Tokenizer: Break up code into smallest meaningful pieces. For python the code def myfunc(x):\n\tprint(x) might be broken up into a list of: [def, myfunc, (, x, ), :, \t, print, (, x, ) ] Parser: Take the tokens and turn them into something logical.</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>Encodings</title>
    <link>https:/quartz.jzhao.xyz/programming/Encodings</link>
    <guid>https:/quartz.jzhao.xyz/programming/Encodings</guid>
    <description>Encoding just means a way to take a set of information in one format, and convert or represent it to another format. You can imagine the same concept (a boat, a sandwhich etc.</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>Garbage Collection (TODO)</title>
    <link>https:/quartz.jzhao.xyz/programming/Garbage-Collection-(TODO)</link>
    <guid>https:/quartz.jzhao.xyz/programming/Garbage-Collection-(TODO)</guid>
    <description>Algorithms and Theory § Mark-and-Sweep: Garbage Collection Algorithm - GeeksforGeeks Static single-assignment form - Wikipedia Modern Day implementations § V8 (Node JS, Chromium browsers) § Trash talk: the Orinoco garbage collector · V8 High-performance garbage collection for C++ · V8 Garbage collection in V8, an illustrated guide | by Irina Shestak | Medium smol-zines/guides/garbage-collection-in-v8.</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>HTML (TODO)</title>
    <link>https:/quartz.jzhao.xyz/programming/HTML-(TODO)</link>
    <guid>https:/quartz.jzhao.xyz/programming/HTML-(TODO)</guid>
    <description> HTML Standard (whatwg.org) .</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>Hashing</title>
    <link>https:/quartz.jzhao.xyz/programming/Hashing</link>
    <guid>https:/quartz.jzhao.xyz/programming/Hashing</guid>
    <description>Hashing is a process where you take some sort of input data and use a hashing algorithm map it to some sort of output data (called a hash). This output data should be deterministic, meaning for each input there should be 1 output when put through our hashing algorithm.</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item><item>
    <title>FOSS (Free and Open Source Software)</title>
    <link>https:/quartz.jzhao.xyz/programming/Open-Source-&-Free-Software</link>
    <guid>https:/quartz.jzhao.xyz/programming/Open-Source-&-Free-Software</guid>
    <description>When developing software you have an important choice to make. Should users be able to see the source code to the program you’re asking them to run? Should you be able to know the internals of what’s happening in your computer? Much of the software we used today is closed source and proprietary, meaning we don’t know how it works, since we can’t view the source code.</description>
    <pubDate>Tue, 30 Jan 2024 06:42:50 GMT</pubDate>
  </item>
    </channel>
  </rss>